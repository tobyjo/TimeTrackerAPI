// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TimeTracker.API.DbContexts;

#nullable disable

namespace TimeTracker.API.Migrations
{
    [DbContext(typeof(TimeTrackerContext))]
    partial class TimeEntryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TimeTracker.API.Entities.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "BPC.001",
                            Description = "Berkshire Primary Care 001"
                        },
                        new
                        {
                            Id = 2,
                            Code = "BP",
                            Description = "ARRS"
                        });
                });

            modelBuilder.Entity("TimeTracker.API.Entities.SegmentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("SegmentTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Meeting"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Calls"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Planning"
                        });
                });

            modelBuilder.Entity("TimeTracker.API.Entities.TimeEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("SegmentTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("SegmentTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("TimeEntries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndDateTime = new DateTime(2025, 8, 1, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 1,
                            SegmentTypeId = 1,
                            StartDateTime = new DateTime(2025, 8, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            EndDateTime = new DateTime(2025, 8, 2, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 1,
                            SegmentTypeId = 2,
                            StartDateTime = new DateTime(2025, 8, 2, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            EndDateTime = new DateTime(2025, 8, 2, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 2,
                            SegmentTypeId = 3,
                            StartDateTime = new DateTime(2025, 8, 2, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        });
                });

            modelBuilder.Entity("TimeTracker.API.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "Kirstine Hall",
                            UserName = "kirstine"
                        },
                        new
                        {
                            Id = 2,
                            FullName = "Toby Jones",
                            UserName = "toby"
                        });
                });

            modelBuilder.Entity("TimeTracker.API.Entities.TimeEntry", b =>
                {
                    b.HasOne("TimeTracker.API.Entities.Project", "Project")
                        .WithMany("TimeEntries")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TimeTracker.API.Entities.SegmentType", "SegmentType")
                        .WithMany("TimeEntries")
                        .HasForeignKey("SegmentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TimeTracker.API.Entities.User", "User")
                        .WithMany("TimeEntries")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("SegmentType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TimeTracker.API.Entities.Project", b =>
                {
                    b.Navigation("TimeEntries");
                });

            modelBuilder.Entity("TimeTracker.API.Entities.SegmentType", b =>
                {
                    b.Navigation("TimeEntries");
                });

            modelBuilder.Entity("TimeTracker.API.Entities.User", b =>
                {
                    b.Navigation("TimeEntries");
                });
#pragma warning restore 612, 618
        }
    }
}
